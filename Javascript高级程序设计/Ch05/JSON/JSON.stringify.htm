<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>JSON.stringify 函数</title>
    <script type="text/javascript">
        /**
         * 说明：将 JavaScript 值转换为 JavaScript 对象表示法 (Json) 字符串。
         * 语法：JSON.stringify(value [, replacer] [, space])
         */
        
        // value
        // 必需。  要转换的 JavaScript 值（通常为对象或数组）。  
        // replacer
        // 可选。  用于转换结果的函数或数组。  
        // 如果 replacer 为函数，则 JSON.stringify 将调用该函数，并传入每个成员的键和值。  使用返回值而不是原始值。  如果此函数返回 undefined，则排除成员。  根对象的键是一个空字符串：""。  
        // 如果 replacer 是一个数组，则仅转换该数组中具有键值的成员。  成员的转换顺序与键在数组中的顺序一样。  当 value 参数也为数组时，将忽略 replacer 数组。  
        // space
        // 可选。  向返回值 JSON 文本添加缩进、空格和换行符以使其更易于读取。  
        // 如果省略 space，则将生成返回值文本，而没有任何额外空格。
        // 如果 space 是一个数字，则返回值文本在每个级别缩进指定数目的空格。  如果 space 大于 10，则文本缩进 10 个空格。  
        // 如果 space 是一个非空字符串（例如“\t”），则返回值文本在每个级别中缩进字符串中的字符。
        // 如果 space 是长度大于 10 个字符的字符串，则使用前 10 个字符。

        /**
         * 此示例使用 JSON.stringify 将 contact 对象转换为 JSON 文本。  定义 memberfilter 数组以便只转换 surname 和 phone 成员。  省略 firstname 成员。  
         */
        var contact = new Object();
        contact.firstname = "Jesper";
        contact.surname = "Aaberg";
        contact.phone = ["555-0100", "555-0120"];

        var memberfilter = new Array();
        memberfilter[0] = "surname";
        memberfilter[1] = "phone";
        var jsonText = JSON.stringify(contact, memberfilter, "\t");
        document.write(jsonText);
        // Output:
        // { "surname": "Aaberg", "phone": [ "555-0100", "555-0120" ] }

        /**
         * 此示例将 JSON.stringify 与一个数组一起使用。   replaceToUpper 函数将数组中的每个字符串转换为大写形式。  
         */
        
        var continents = new Array();
        continents[0] = "Europe";
        continents[1] = "Asia";
        continents[2] = "Australia";
        continents[3] = "Antarctica";
        continents[4] = "North America";
        continents[5] = "South America";
        continents[6] = "Africa";

        var jsonText = JSON.stringify(continents, replaceToUpper);

        function replaceToUpper(key, value) {
            return value.toString().toUpperCase();
        }

        //Output:
        // "EUROPE,ASIA,AUSTRALIA,ANTARCTICA,NORTH AMERICA,SOUTH AMERICA,AFRICA"

        /**
         * 此示例使用 toJSON 方法将字符串值转换为大写形式。
         */
        
        var contact = new Object();
        contact.firstname = "Jesper";
        contact.surname = "Aaberg";
        contact.phone = ["555-0100", "555-0120"];

        contact.toJSON = function(key)
         {
            var replacement = new Object();
            for (var val in this)
            {
                if (typeof (this[val]) === 'string'){
                    replacement[val] = this[val].toUpperCase();
                }
                else{
                    replacement[val] = this[val]
                }
            }
            return replacement;
        };

        var jsonText = JSON.stringify(contact);
        document.write(jsonText);

        // Output:
        /**
         * {"firstname":"JESPER","surname":"AABERG","phone":["555-0100","555-0120"]}
         * '{"firstname":"JESPER","surname":"AABERG","phone":["555-0100","555-0120"]}'
         */


    </script>
</head>
<body>
    
</body>
</html>